// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Team {
    id              String            @id @default(cuid())
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    name            String
    description     String?
    managers        TeamManagers[]
    joinInvitations JoinInvitations[]
    punishment      Punishment[]
    teamTresury     TeamTresury[]
    teamMember      TeamMember[]
}

model TeamMember {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    clerkId   String
    teamId    String
    team      Team     @relation(fields: [teamId], references: [id])
}

model TeamManagers {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    String
    clerkId   String
}

model JoinInvitations {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    String
    clerkId   String
}

model Punishment {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    type      String
    price     Float?
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    String
    clerkId   String
    payed     Boolean  @default(false)
}

model PunishmentList {
    id          String @id @default(cuid())
    name        String
    description String
    price       Float?
}

model TeamTresury {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    type      String
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    String
    clerkId   String
    payed     Boolean  @default(false)
}
