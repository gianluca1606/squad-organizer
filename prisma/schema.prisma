// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id              String            @id @default(cuid())
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    clerkId         String            @unique
    email           String            @unique
    role            String            @default("user")
    nickname        String?
    Team            Team[]
    managers        TeamManagers[]
    JoinInvitations JoinInvitations[]
    Punishment      Punishment[]
    TeamTresury     TeamTresury[]
}

model Team {
    id              String            @id @default(cuid())
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    name            String
    description     String?
    members         User[]
    Managers        TeamManagers[]
    JoinInvitations JoinInvitations[]
    Punishment      Punishment[]
    TeamTresury     TeamTresury[]
}

model TeamManagers {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
}

model JoinInvitations {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
}

model Punishment {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    type      String
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    payed     Boolean  @default(false)
}

model TeamTresury {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    type      String
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    payed     Boolean  @default(false)
}
